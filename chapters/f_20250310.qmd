---
title: "The Central F Distribution"
author: "Gabriel J. Odom"
date: last-modified
format:
  html:
    embed-resources: false
    code-fold: true
knitr:
  opts_chunk:        ########## set global options ############
    collapse: true   # keep code from blocks together (if shown)
    echo: true       # show code
    message: true    # show messages
    warning: true    # show warnings
    error: true      # show error messages
    comment: ""      # don't show ## with printed output
    dpi: 100         # image resolution (typically 300 for publication)
    fig-width: 6.5   # figure width
    fig-height: 4.0  # figure height
    R.options:    
      digits: 3    # round to three digits
editor: source
---

```{r, tidyverse-tidymodels}
#| echo: false

library(conflicted)
suppressPackageStartupMessages(library(tidymodels))
tidymodels_prefer()
suppressPackageStartupMessages(library(tidyverse))

# suppress "`summarise()` has grouped output by " messages
options(dplyr.summarise.inform = FALSE)
```



## Deriving the Distribution


</br>



## Example Random Samples

```{r, random-sample}
set.seed(20150516)

# F for a well-posed linear model [p = 5, n = 100]
xWP <- rf(n = 1000, df1 = 4, df2 = 99)
samplesWP_ls <- list(
  n10   = xWP[1:10],
  n30   = xWP[1:30],
  n60   = xWP[1:60],
  n1000 = xWP
)

# F for a poorly-posed linear model [p = 25, n = 100]
xPP <- rf(n = 1000, df1 = 24, df2 = 99)
samplesPP_ls <- list(
  n10   = xPP[1:10],
  n30   = xPP[1:30],
  n60   = xPP[1:60],
  n1000 = xPP
)

range_num <- range(c(xWP, xPP))

rm(xWP, xPP)
```

```{r}
#| label: shared-density-plotting-function
PlotSharedDensity <- function(x, range_x, bandwidth = "nrd0") {
  
  xDens_ls <- density(x, bw = bandwidth)
  xHist_ls <- hist(x, plot = FALSE)
  yLargest_num <- max(max(xDens_ls$y), max(xHist_ls$density))
  
  hist(
    x, prob = TRUE,
    xlim = range_x, ylim = c(0, yLargest_num)
  )
  lines(xDens_ls, col = 4, lwd = 2)
  
}
```


```{r}
#| label: random-sample-hist-WP
#| fig-show: "hold"

par(mfrow = c(2, 2))

PlotSharedDensity(
  x = samplesWP_ls$n10, range_x = range_num
)
PlotSharedDensity(
  x = samplesWP_ls$n30, range_x = range_num
)
PlotSharedDensity(
  x = samplesWP_ls$n60, range_x = range_num
)
PlotSharedDensity(
  x = samplesWP_ls$n1000, range_x = range_num
)

par(mfrow = c(1, 1))

# , bandwidth = 0.005
```

```{r}
#| label: random-sample-hist-PP
#| fig-show: "hold"

par(mfrow = c(2, 2))

PlotSharedDensity(
  x = samplesPP_ls$n10, range_x = range_num
)
PlotSharedDensity(
  x = samplesPP_ls$n30, range_x = range_num
)
PlotSharedDensity(
  x = samplesPP_ls$n60, range_x = range_num
)
PlotSharedDensity(
  x = samplesPP_ls$n1000, range_x = range_num
)

par(mfrow = c(1, 1))
```


</br>



## Show that this is a Distribution


</br>



## Derive the Moment Generating Function


</br>



## Method of Moments Estimates from Observed Data
Let's generate some random data...


### $\mathbb{E}[k]$


### $\mathbb{E}[k^2]$ and $\text{Var}[k]$


### Solving the System


</br>



## Maximum Likelihood Estimators


</br>



## Exercises


