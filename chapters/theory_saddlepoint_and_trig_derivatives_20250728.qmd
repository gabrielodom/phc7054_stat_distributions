---
title: "Formal Foundations: Trigonometric Derivatives and the Saddlepoint Test"
author: "Gabriel J. Odom"
date: last-modified
format:
  html:
    embed-resources: false
    code-fold: true
knitr:
  opts_chunk:        ########## set global options ############
    collapse: true   # keep code from blocks together (if shown)
    echo: true       # show code
    message: true    # show messages
    warning: true    # show warnings
    error: true      # show error messages
    comment: ""      # don't show ## with printed output
    dpi: 100         # image resolution (typically 300 for publication)
    fig-width: 6.5   # figure width
    fig-height: 4.0  # figure height
    R.options:    
      digits: 3    # round to three digits
editor: source
---

```{r, tidyverse-tidymodels}
#| echo: false

library(conflicted)
suppressPackageStartupMessages(library(tidymodels))
tidymodels_prefer()
suppressPackageStartupMessages(library(tidyverse))

# suppress "`summarise()` has grouped output by " messages
options(dplyr.summarise.inform = FALSE)
```



## Overview
To prepare for the derivation of the Normal Distribution, we need a refresher on derivatives of trigonometric functions (and a few identities of trigonometric functions as well.) Also, for the maximum likelihood estimators that we've seen so far, the likelihood functions were either 1) **univariate** (having only one unknown parameter), like the Binomial or Exponential Distributions, or 2) **bivariate** (having two unknown parameters), but were so complicated that no closed form solution for the MLEs existed. However, for the Normal Distribution, we will have a bivariate likelihood (with both $\mu$ and $\sigma^2$ unknown), but we will be able get a closed-form system of two equations for these two unknowns which **can** be solved analytically. This means that we need a version of the **Second Derivative Test** that works for bivariate functions; this is called the **Saddlepoint Test**.

</br>



## Trigonometric Functions and the Unit Circle


### The Unit Circle
This is the [**Unit Circle**](https://etc.usf.edu/clipart/43200/43216/unit-circle8_43216.htm), and it is crucial for our understanding of basic trigonometric functions.^[<https://en.wikipedia.org/wiki/Unit_circle>] The radius of the unit circle is 1, and we mostly use it to create **right triangles**^[<https://en.wikipedia.org/wiki/Right_triangle>] where the hypotenuse^[The name for the longest side of a triangle] is the radius of the circle.

![](../figs/unit-circle-reference-angles.gif)


### Sines and Cosines
Let's draw a triangle within this unit circle (image from [this high school maths website](https://flexbooks.ck12.org/cbook/ck-12-precalculus-concepts-2.0/section/5.1/primary/lesson/the-unit-circle-pcalc/)).

![](../figs/unit_circle_w_triangle.png)

We now have a right triangle from the origin to the edge of the unit circle. The **sine** function takes in the angle, often symbolized by $\theta$, and returns the height of this triangle. Technically speaking, the sine function returns the ratio of the height of the triangle to its hypotenuse, but the hypotenuse of these triangles will be the radius of the unit circle, i.e. 1. The **cosine** function takes in this same angle and returns the width of this triangle. Because of this relationship, we often describe the unit circle relationship on the $\langle x, y \rangle$ plane with $x = \cos(\theta)$ and $y = \sin(\theta)$. Also, applying the standard algebraic formula for a circle, we arrive at the most famous trigonometric identity:
$$
\begin{aligned}
r^2 &= x^2 + y^2 \\
\Longrightarrow 1 &= x^2 + y^2 \\
\Longrightarrow 1 &= \cos^2(\theta) + \sin^2(\theta).
\end{aligned}
$$

> The common mnemonic device to remember this is "SOH-CAH-TOA" (pronounced "sow kuh towuh" in American English):
> 
> - **S**ine: **O**pposite side (height) divided by **H**ypotenuse
> - **C**osine: **A**djacent side (width) divided by **H**ypotenuse
> - **T**angent: **O**pposite side (height) divided by **A**djacent side (width)

Let's calculate these values in R. Unfortunately, the trigonometric functions do not allow for input in degrees, so we must convert from degrees to **radians**.^[<https://en.wikipedia.org/wiki/Radian>] The formulae to convert between degrees and radians (and back) are
$$
\text{Rad} = \text{Degrees}\times\frac{\pi}{180};\ \ \text{Degrees} = \text{Rad}\times\frac{180}{\pi}.
$$

Let's use the R `sin()` and `cos()` functions to confirm that a $30^{\circ}$ triangle has a height of 0.5 and a width of $\frac{1}{2}\sqrt{3}$:
```{r}
rads30_num <- 30 * pi / 180
sin(rads30_num)
cos(rads30_num)
sqrt(3)/2
```

One other important piece of information to know about these two functions is their graph over all $360^{\circ}$ of a circle. Here is the sine:
```{r}
degrees_int <- 1:360
rads_num <- degrees_int * pi / 180
plot(
  x = degrees_int, y = sin(rads_num),
  main = "The Sine Function",
  xaxt = "n", xlab = "Degrees", ylab = "Sine"
)
axis(side = 1, at = seq(0, 360, by = 45))
abline(h = 0)
```
And here is the cosine:
```{r}
plot(
  x = degrees_int, y = cos(rads_num),
  main = "The Cosine Function",
  xaxt = "n", xlab = "Degrees", ylab = "Cosine"
)
axis(side = 1, at = seq(0, 360, by = 45))
abline(h = 0)
```



### The Tangent Function
Now, there is one other main function in trigonometry that we mentioned but haven't discussed: the **tangent**. From the calculus perspective, the term "tangent" refers to a straight line with the slope that's equal to a curve at a particular point. For a refresher, go back to the Formal Foundations section on the Limit Definition of the Derivative in the Poisson Distribution lesson. For trigonometry, the term "tangent" refers to a function relating the angle of a triangle to the ratio of its height and width. Using R, let's confirm that this ratio for this triangle above is $(1/2) \div (\frac{1}{2}\sqrt{3})$:
```{r}
tan(rads30_num)
(1/2) / (sqrt(3)/2)
```

Recall that the width of these triangles will oscillate from a maximum of 1 (when the angle is a multiple of $180^{\circ}$) to a width of 0 (when the angle is half of a multiple of $180^{\circ}$). Therefore, because the tangent is defined by the ratio of height to width, the tangent will be undefined (due to division by 0) when when the angle is half of a multiple of $180^{\circ}$. Let's plot the tangent as well:
```{r}
plot(
  x = degrees_int, y = tan(rads_num), ylim = c(-5, 5),
  main = "The Tangent Function",
  xaxt = "n", xlab = "Degrees", ylab = "Tangent"
)
axis(side = 1, at = seq(0, 360, by = 45))
abline(v = c(90, 270))
```


### Inverse Trigonometric Functions
As with almost all mathematical operators, the trigonometric functions have **inverse** functions.^[<https://en.wikipedia.org/wiki/Inverse_function#Standard_inverse_functions>] These are functions that "undo" the effects of the original function. For example, if $f(x) = \sqrt{x}$, then $g(x) = x^2$ "undoes" the effects of $f$. For the trigonometric functions, these inverse functions are called the "arc" functions and defined as follows:
$$
\begin{aligned}
\arcsin(\sin(\theta)) &= \theta, \\
\arccos(\cos(\theta)) &= \theta, \\
\arctan(\tan(\theta)) &= \theta.
\end{aligned}
$$
So, these "arc" functions "undo" their corresponding trigonometric functions. These often come up when solving equations for an angle $\theta$. For example:
$$
\begin{aligned}
\sin(\theta) &= \frac{\text{height}}{\text{width}} \\
\Longrightarrow \arcsin(\sin(\theta)) &= \arcsin\left( \frac{\text{height}}{\text{width}} \right) \\
\Longrightarrow \theta &= \arcsin\left( \frac{\text{height}}{\text{width}} \right).
\end{aligned}
$$

We will also graph these three functions, but we remark that their domains will be different. For sine and cosine, the domain was $[0^{\circ}, 360^{\circ}]$; the range was $[-1,1]$. For tangent, the domain was $[0^{\circ}, 360^{\circ}]$ *except for* the vertical asymptotes at $\{90^{\circ}, 270^{\circ}\}$; the range was $(-\infty, \infty)$. Also, as before, R uses radians instead of degrees, so we will also have to transform back the results to degrees.

Let's plot these inverse trigonometric functions, but pay special attention to their domains and ranges. Let's start with the arcsine (using the `asin()` function):
```{r}
triangleHeights_num <- seq(-1, 1, length.out = 101)
thetaRads_num <- asin(triangleHeights_num)
plot(
  x = triangleHeights_num, y = 180 * thetaRads_num / pi, ylim = c(-90, 90),
  main = "The Arcsine Function",
  xaxt = "n", xlab = "Triangle Heights",
  yaxt = "n", ylab = "Generating Angle"
)
axis(side = 1, at = seq(-1, 1, length.out = 9))
axis(side = 2, at = seq(-90, 90, by = 30))
abline(h = 0)
```
Similarly, we can plot the arccosine (using the `acos()` function):
```{r}
triangleWidths_num <- seq(-1, 1, length.out = 101)
thetaRads_num <- acos(triangleWidths_num)
plot(
  x = triangleWidths_num, y = 180 * thetaRads_num / pi, ylim = c(0, 180),
  main = "The Arccosine Function",
  xaxt = "n", xlab = "Triangle Widths",
  yaxt = "n", ylab = "Generating Angle"
)
axis(side = 1, at = seq(-1, 1, length.out = 9))
axis(side = 2, at = seq(0, 180, by = 30))
abline(h = 0)
```
Finally, for the arctangent, because this function takes the ratio of triangle heights and widths as its input, the domain of possible values includes the entire Real line. However, the range of the function is only from $(-90^{\circ}, 90^{\circ})$. We now plot the this function (using the `atan()` function):
```{r}
triangleTan_num <- seq(-4, 4, length.out = 81)
thetaRads_num <- atan(triangleTan_num)
plot(
  x = triangleTan_num, y = 180 * thetaRads_num / pi, ylim = c(-90, 90),
  main = "The Arctangent Function",
  xaxt = "n", xlab = "Triangle (Height / Width)",
  yaxt = "n", ylab = "Generating Angle"
)
axis(side = 1, at = seq(-4, 4, length.out = 9))
axis(side = 2, at = seq(-180, 180, by = 45))
abline(h = 0)
```


</br>



## Trigonometric Derivatives
Now that we've had a basic refresher on the trigonometric functions, we want to get some intuition for the well-known trigonometric derivatives. These derivatives are
$$
\begin{aligned}
\frac{d}{d\theta} \sin(\theta) &= \cos(\theta), \\
\frac{d}{d\theta} \cos(\theta) &= -\sin(\theta), \\
\frac{d}{d\theta} \tan(\theta) &= 1 + \tan^2(\theta).
\end{aligned}
$$


### Derivatives of Sine and Cosine
Rather than going through the deep dive^[Read Prof. R. Brown's supplemental proof on this: <https://math.jhu.edu/~brown/courses/f11/Concepts/Section3.3.pdf>] needed to prove these derivatives, we will simply plot the slope of the sine function at many very small intervals. First, recall the graph of the sine (this time in radians):
```{r}
plot(
  x = rads_num, y = sin(rads_num),
  main = "The Sine Function",
  xaxt = "n", xlab = "Radians", ylab = "Sine"
)
axis(side = 1, at = seq(0, 2*pi, by = pi/4))
abline(h = 0)
```
We already see that the slope at 0 is 1, the slope at $\pi/2$ is 0, the slope at $\pi$ is negative 1, the slope at $3\pi/2$ is 0 again, and the slope at $2\pi$ is 1 again. (Also, since we don't care about the angles themselves, I'm going to leave the computing in radians. It won't matter to the shape of the curve.) Here are those points plotted (with the cosine curve in green):
```{r}
plot(
  x = seq(0, 2 * pi, length.out = 5), y = c(1, 0, -1, 0, 1),
  xaxt = "n", xlab = "Radians", xlim = c(0, 2*pi),
  yaxt = "n", ylab = "Slopes", ylim = c(-1, 1),
  main = "Slopes of the Sine Function"
)
axis(side = 1, at = seq(0, 2*pi, by = pi/4))
axis(side = 2, at = seq(-1, 1, by = 0.5))
curve(cos(x), add = TRUE, col = "darkgreen", lwd = 2)
```

Let's write a function to calculate these slopes at more than these five simple points. (And we want the computer to calculate slopes for us.) I'm going to start very "rough", and evaluate the slope at only 9 points:
```{r}
nPoints_int <- 9
radsSparse_num <- seq(0, 2 * pi, length.out = nPoints_int + 1)
sineSlopes_num <- vector(mode = "numeric", length = nPoints_int)
midpoints_num <- vector(mode = "numeric", length = nPoints_int)

for (x in seq_len(nPoints_int)) {
  
  deltaY <- sin(radsSparse_num[x + 1]) - sin(radsSparse_num[x])
  deltaTheta <- radsSparse_num[x + 1] - radsSparse_num[x]
  
  sineSlopes_num[x] <- deltaY / deltaTheta
  midpoints_num[x]  <- (radsSparse_num[x + 1] + radsSparse_num[x]) / 2
  
}

plot(
  x = midpoints_num, y = sineSlopes_num,
  xaxt = "n", xlab = "Radians", xlim = c(0, 2*pi),
  yaxt = "n", ylab = "Slopes", ylim = c(-1, 1),
  main = "Slopes of the Sine Function"
)
axis(side = 1, at = seq(0, 2*pi, by = pi/4))
axis(side = 2, at = seq(-1, 1, by = 0.5))
curve(cos(x), add = TRUE, col = "darkgreen", lwd = 2)
```

Because the computer is doing all the work, let's increase to 99 points:
```{r}
nPoints_int <- 99
radsSparse_num <- seq(0, 2 * pi, length.out = nPoints_int + 1)
sineSlopes_num <- vector(mode = "numeric", length = nPoints_int)
midpoints_num <- vector(mode = "numeric", length = nPoints_int)

for (x in seq_len(nPoints_int)) {
  
  deltaY <- sin(radsSparse_num[x + 1]) - sin(radsSparse_num[x])
  deltaTheta <- radsSparse_num[x + 1] - radsSparse_num[x]
  
  sineSlopes_num[x] <- deltaY / deltaTheta
  midpoints_num[x]  <- (radsSparse_num[x + 1] + radsSparse_num[x]) / 2
  
}

plot(
  x = midpoints_num, y = sineSlopes_num,
  xaxt = "n", xlab = "Radians", xlim = c(0, 2*pi),
  yaxt = "n", ylab = "Slopes", ylim = c(-1, 1),
  main = "Slopes of the Sine Function"
)
axis(side = 1, at = seq(0, 2*pi, by = pi/4))
axis(side = 2, at = seq(-1, 1, by = 0.5))
curve(cos(x), add = TRUE, col = "darkgreen", lwd = 2)
```

As we can see, as the difference between each angle shrinks (i.e. as $\Delta\theta \to 0$), the slopes of the lines tangent to the sine function approach the values given by the cosine function. Not to belabour the point, but we can apply the exact same effort to show that the derivative of the cosine function is $-1$ times the sine function. This line of reasoning is not a proof (for a formal proof, see the [link to Prof. Brown's notes](https://math.jhu.edu/~brown/courses/f11/Concepts/Section3.3.pdf) that I also included in the footnote above), but it does help us understand what is going on a bit better.


### Derivative of Tangent
Now that we have the derivative of $\sin(\theta)$ and $\cos(\theta)$, the derivative of $\tan(\theta)$ is far more straightforward, using the **Quotient Rule** and the two derivatives we just reviewed:
$$
\begin{aligned}
\frac{d}{d\theta} \tan(\theta) &= \frac{d}{d\theta} \frac{\sin(\theta)}{\cos(\theta)} \\
&= \frac{\cos(\theta) \frac{d}{d\theta} \sin(\theta) - \sin(\theta) \frac{d}{d\theta} \cos(\theta)}{[\cos(\theta)]^2} \\
&= \frac{\cos(\theta) \times [\cos(\theta)] - \sin(\theta) \times [-\sin(\theta)]}{\cos^2(\theta)} \\
&= \frac{\cos^2(\theta) + \sin^2(\theta)}{\cos^2(\theta)} \\
&= \frac{\cos^2(\theta)}{\cos^2(\theta)} + \frac{\sin^2(\theta)}{\cos^2(\theta)} \\
&= 1 + \tan^2(\theta).
\end{aligned}
$$


### Derivative of the Arctangent
This derivative is more non-traditional (that is, creative). Let's begin by letting $\arctan(x) = \theta$, which implies that $\tan(\theta) = x$. Then,^[Note that it's "bad form" to manipulate a string of equations on the left hand side, but I'm doing it anyway.]
$$
\begin{aligned}
\frac{d}{dx} \tan(\theta) &= \frac{d}{dx}x \\
\qquad\text{\emph{Chain rule...}}& \\
\Longrightarrow \left( 1 + \tan^2(\theta) \right) \frac{d\theta}{dx} &= 1 \\
\left( 1 + [\tan(\theta)]^2 \right) \frac{d[\theta]}{dx} &= 1 \\
\qquad\text{\emph{Substitute back in...}}& \\
\left( 1 + [x]^2 \right) \frac{d[\arctan(x)]}{dx} &= 1 \\
\Longrightarrow \frac{\left( 1 + x^2 \right)}{\left( 1 + x^2 \right)} \frac{d}{dx}\arctan(x) &= \frac{1}{1 + x^2} \\
\Longrightarrow \frac{d}{dx}\arctan(x) &= \frac{1}{1 + x^2}.
\end{aligned}
$$

</br>



## The Saddlepoint Test

</br>



## Footnotes

